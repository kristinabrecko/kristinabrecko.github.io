external_drive = "/Volumes/My Book Duo/"
local_folder = "/Users/kristinabrecko/Dropbox/8. Pricing and Nutrition/"
find_files = function(list, year, drive) {
list[, mod := as.character(product_module_code)]
list[, group := as.character(product_group_code)]
list[nchar(product_module_code) == 3, mod := paste0("0", product_module_code)]
list[nchar(product_group_code) == 3, group := paste0("0", product_group_code)]
list[, file_path := paste0(drive, "scanner/RMS/", year, "/Movement_Files/", group, "_", year, "/", mod, "_", year, ".tsv")]
list[, exists := as.numeric(file.exists(file_path))]
return(list)
}
############ CPI
cpi = fread(paste0(local_folder, "1. Raw Data/CPILFESL.csv"))
library(data.table)
library(lubridate)
library(lfe)
library(parallel)
library(gplots)
library(ggplot2)
library(bit64)
library(gridExtra)
library(tictoc)
library(stargazer)
library(wesanderson)
library(stringdist)
library(fst)
library(fixest)
library(stringr)
library(doParallel)
library(parallel)
############ CPI
cpi = fread(paste0(local_folder, "1. Raw Data/CPILFESL.csv"))
cpi[, yearmonth := substr(DATE, 1,7)]
cpi[, year := as.numeric(substr(DATE, 1,4))]
cpi_201001 = cpi[yearmonth == "2010-01", CPILFESL]
cpi[, cpi_ratio := cpi_201001 / CPILFESL]
############ products
products = fread(paste0(external_drive, "scanner/RMS/products.tsv"))
# products = fread("/Users/kristinabrecko/Dropbox/8. Pricing and Nutrition/1. Raw Data/Purchase Data/Nielsen Static/products.tsv")
### create a brand name variable
products[, brand_name0 := str_squish(str_trim(gsub("[^[:alnum:][:space:]]", "", products$brand_descr)))]
products[, brand_name := gsub("(\\w+).*", "\\1", brand_name0)]
products[, brand_name2 := gsub("^((\\w+\\W+){1}\\w+).*$","\\1", brand_name0)]
products[, numeric_name := as.numeric(brand_name)]
first_word_list = c("THE", "LA", "A", "EL", "LE", "DEL")
products[!is.na(numeric_name) | nchar(brand_name) < 3 | brand_name %in% first_word_list,
brand_name := brand_name2]
top_modules_RMS = as.data.table(fread(paste0(local_folder, "4. Output/top_modules_RMSspend.csv")))
group_mod_list = unique(products[!(department_descr == "GENERAL MERCHANDISE" | department_descr == ""),
c("department_descr", "product_group_code", "product_module_code", "product_group_descr", "product_module_descr")])
group_mod_list[, product_module_descr := gsub("\"", "", product_module_descr)]
group_mod_list = unique(group_mod_list)
### import dates
week_date = read.fst(paste0(local_folder, "2. Analysis Data/date_week.fst"), as.data.table = T)
y=2018
print(paste0("YEAR: ", y))
### import the household, product & store data
trips = fread(paste0(external_drive, "hh_panel/HMS/", y, "/Annual_Files/trips_", y, ".tsv"))
purchases = data.table(fread(paste0(external_drive, "hh_panel/HMS/", y, "/Annual_Files/purchases_", y, ".tsv")))
stores = data.table(fread(paste0(external_drive, "scanner/RMS/", y, "/Annual_Files/stores_", y, ".tsv")))
rms_versions = fread(paste0(external_drive, "scanner/RMS/", y, "/Annual_Files/rms_versions_", y, ".tsv"))
purchases
retailers = fread(paste0(external_drive, "hh_panel/HMS/Master_Files/Latest/retailers.tsv"))
retailers
trips
retailers
trips[retailer_code %in% unique(stores[, retailer_code])]
trips
trips[retailer_code %in% unique(stores[, retailer_code])]
trips[store_code_uc %in% unique(stores[, store_code_uc])]
trips_qual = trips[retailer_code %in% unique(stores[, retailer_code])]
trips_qual
purchases_qual = purchases[trip_code_uc %in% unique(trips_qual[,trip_code_uc])]
purchases_qual
### append UPC information
setkeyv(products, c("upc", "upc_ver_uc"))
setkeyv(purchases_qual, c("upc", "upc_ver_uc"))
purchases_qual = merge(purchases_qual, products[, c("upc", "upc_ver_uc", "multi", "size1_amount", "size1_units",
"brand_descr", "brand_name", "department_descr", "department_code",
"product_group_code", "product_group_descr",
"product_module_code", "product_module_descr")],
all.x=T, by = c("upc", "upc_ver_uc"))
purchases_qual = purchases_qual[!(department_descr == "GENERAL MERCHANDISE" | department_descr == "" | department_descr == "MAGNET DATA"),]
purchases_qual
### append trip information
purchases_qual = merge(purchases_qual, trips_qual, by = c("trip_code_uc"), all.x = T)
setkey(purchases_qual, "store_code_uc")
setkey(stores, "store_code_uc")
purchases_qual[stores, channel_code := i.channel_code]
purchases_qual = purchases_qual[channel_code != "L" & channe_code != "G" & channel_code != "C", ]
purchases_qual
purchases_qual = purchases_qual[channel_code != "L" & channel_code != "G" & channel_code != "C", ]
purchases_qual
purchases_qual[is.na(channel_code)]
purchases_qual = purchases[trip_code_uc %in% unique(trips_qual[,trip_code_uc])]
### append UPC information
setkeyv(products, c("upc", "upc_ver_uc"))
setkeyv(purchases_qual, c("upc", "upc_ver_uc"))
purchases_qual = merge(purchases_qual, products[, c("upc", "upc_ver_uc", "multi", "size1_amount", "size1_units",
"brand_descr", "brand_name", "department_descr", "department_code",
"product_group_code", "product_group_descr",
"product_module_code", "product_module_descr")],
all.x=T, by = c("upc", "upc_ver_uc"))
purchases_qual = purchases_qual[!(department_descr == "GENERAL MERCHANDISE" | department_descr == "" | department_descr == "MAGNET DATA"),]
purchases_qual[is.na(channel_code)]
purchases_qual
### append trip information
purchases_qual = merge(purchases_qual, trips_qual, by = c("trip_code_uc"), all.x = T)
purchases_qual
setkey(purchases_qual, "store_code_uc")
setkey(stores, "store_code_uc")
purchases_qual[stores, channel_code := i.channel_code]
purchases_qual
setkey(purchases_qual, "retailer_code")
setkey(retailers, "retailer_code")
retailers
purchases_qual[retailers, channel_type := i.channel_type]
purchases_qual
purchases_qual[is.na(channel_type)]
table(purchases_qual[, c("channel_code", "channel_type")])
purchases_qual = purchases_qual[channel_code != "L" & channel_code != "G" & channel_code != "C", ]
purchases_qual
purchases_qual[is.na(channel_code)]
table(purchases_qual[, c("channel_code", "channel_type")])
purchases_qual[brand_descr == "CTL BR", brand_name := paste0(brand_name, " ", retailer_code)]
purchases_qual
purchases_qual[, quarter := quarter(as.IDate(purchase_date))]
purchases_qual
table(purchases_qual[, quarter])
purchases_qual[, .(count_purch = length(trip_code_uc)), .(household_code, upc, upc_ver_uc, quarter)]
quarter_hh_upc = purchases_qual[, .(count_purch = as.numeric(length(trip_code_uc)>0)), .(household_code, upc, upc_ver_uc, quarter)]
quarter_hh_upc = dcast(purchases_qual[, .(count_purch = as.numeric(length(trip_code_uc)>0)), .(household_code, upc, upc_ver_uc, quarter)],
household_code + upc + upc_ver_uc ~ quarter, value.var = "count_purch")
quarter_hh_upc
quarter_hh_upc[is.na(quarter_hh_upc)] = 0
quarter_hh_upc
quarter_hh_upc[, total_q := `1` + `2` + `3` + `4`]
quarter_hh_upc
table(quarter_hh_upc[, total_q])
purchases_qual
quarter_hh_mod = dcast(purchases_qual[, .(count_purch = as.numeric(length(trip_code_uc)>0)), .(household_code, upc, upc_ver_uc, quarter)],
household_code + product_module_descr ~ quarter, value.var = "count_purch")
quarter_hh_mod = dcast(purchases_qual[, .(count_purch = as.numeric(length(trip_code_uc)>0)), .(household_code, product_module_descr, quarter)],
household_code + product_module_descr ~ quarter, value.var = "count_purch")
quarter_hh_mod
quarter_hh_mod[is.na(quarter_hh_upc)] = 0
quarter_hh_mod[is.na(quarter_hh_mod)] = 0
quarter_hh_mod
quarter_hh_mod[, total_q := `1` + `2` + `3` + `4`]
quarter_hh_mod
table(quarter_hh_mod[, total_q])
quarter_hh_mod[household_code == "2000049"]
quarter_hh_mod[household_code == "50001524"]
purchases_qual
purchases_qual[is.na(store_zip3)]
purchases_qual = purchases[trip_code_uc %in% unique(trips_qual[,trip_code_uc])]
